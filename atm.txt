class ATM:
    def __init__(self):
        self.users = {
            '123456': {'pin': '1234', 'balance': 5000, 'transaction_history': []},
            '654321': {'pin': '5678', 'balance': 3000, 'transaction_history': []}
            # Add more users as needed
        }
        self.current_user = None
    
    def authenticate_user(self, user_id, pin):
        if user_id in self.users and self.users[user_id]['pin'] == pin:
            self.current_user = user_id
            print(f'Welcome, User {user_id}!')
            return True
        else:
            print('Invalid user ID or PIN. Please try again.')
            return False
    
    def display_menu(self):
        print("\nATM Menu:")
        print("1. Transactions History")
        print("2. Withdraw")
        print("3. Deposit")
        print("4. Transfer")
        print("5. Quit")
    
    def display_transaction_history(self):
        print("\nTransaction History:")
        for transaction in self.users[self.current_user]['transaction_history']:
            print(transaction)
    
    def withdraw(self, amount):
        if amount > 0 and self.users[self.current_user]['balance'] >= amount:
            self.users[self.current_user]['balance'] -= amount
            self.users[self.current_user]['transaction_history'].append(f'Withdraw: ${amount}')
            print(f'Withdrawal successful. Current balance: ${self.users[self.current_user]["balance"]}')
        else:
            print('Withdrawal failed. Insufficient balance.')
    
    def deposit(self, amount):
        if amount > 0:
            self.users[self.current_user]['balance'] += amount
            self.users[self.current_user]['transaction_history'].append(f'Deposit: ${amount}')
            print(f'Deposit successful. Current balance: ${self.users[self.current_user]["balance"]}')
        else:
            print('Deposit failed. Invalid amount.')
    
    def transfer(self, recipient_id, amount):
        if amount > 0 and recipient_id in self.users and recipient_id != self.current_user \
                and self.users[self.current_user]['balance'] >= amount:
            self.users[self.current_user]['balance'] -= amount
            self.users[recipient_id]['balance'] += amount
            self.users[self.current_user]['transaction_history'].append(f'Transfer to {recipient_id}: ${amount}')
            self.users[recipient_id]['transaction_history'].append(f'Transfer from {self.current_user}: ${amount}')
            print(f'Transfer successful. Current balance: ${self.users[self.current_user]["balance"]}')
        elif recipient_id == self.current_user:
            print('Transfer failed. Cannot transfer to yourself.')
        else:
            print('Transfer failed. Insufficient balance or invalid recipient.')
    
    def run(self):
        print("Welcome to the ATM!")
        while True:
            if self.current_user is None:
                user_id = input("Enter your user ID: ")
                pin = input("Enter your PIN: ")
                if self.authenticate_user(user_id, pin):
                    continue
                else:
                    break
            else:
                self.display_menu()
                choice = input("Enter your choice (1-5): ")
                
                if choice == '1':
                    self.display_transaction_history()
                elif choice == '2':
                    amount = float(input("Enter the amount to withdraw: "))
                    self.withdraw(amount)
                elif choice == '3':
                    amount = float(input("Enter the amount to deposit: "))
                    self.deposit(amount)
                elif choice == '4':
                    recipient_id = input("Enter the recipient's user ID: ")
                    amount = float(input("Enter the amount to transfer: "))
                    self.transfer(recipient_id, amount)
                elif choice == '5':
                    print("Thank you for using the ATM. Goodbye!")
                    break
                else:
                    print("Invalid choice. Please enter a number from 1 to 5.")

# Main program
if __name__ == "__main__":
    atm = ATM()
    atm.run()
